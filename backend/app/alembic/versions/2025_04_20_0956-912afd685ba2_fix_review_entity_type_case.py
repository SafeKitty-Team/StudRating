"""fix_review_entity_type_case

Revision ID: 912afd685ba2
Revises: da3d73349285
Create Date: 2025-04-20 09:56:31.937020

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '912afd685ba2'
down_revision: Union[str, None] = 'da3d73349285'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('faculty',
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_faculty')),
    sa.UniqueConstraint('name', name=op.f('uq_faculty_name'))
    )
    op.create_table('professor',
    sa.Column('full_name', sa.String(length=255), nullable=False),
    sa.Column('academic_title', sa.String(length=100), nullable=True),
    sa.Column('faculty_id', sa.Integer(), nullable=False),
    sa.Column('bio', sa.String(length=500), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['faculty_id'], ['faculty.id'], name=op.f('fk_professor_faculty_id_faculty')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_professor'))
    )
    op.create_table('program',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('degree_level', sa.Enum('specialist', 'bachelor', 'master', 'phd', name='program_level', native_enum=False), nullable=False),
    sa.Column('faculty_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['faculty_id'], ['faculty.id'], name=op.f('fk_program_faculty_id_faculty')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_program'))
    )
    op.create_table('subject',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('program_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['program_id'], ['program.id'], name=op.f('fk_subject_program_id_program')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_subject'))
    )
    op.create_table('course_professor',
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('professor_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['professor_id'], ['professor.id'], name=op.f('fk_course_professor_professor_id_professor')),
    sa.ForeignKeyConstraint(['subject_id'], ['subject.id'], name=op.f('fk_course_professor_subject_id_subject')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_course_professor'))
    )
    op.create_foreign_key(op.f('fk_review_course_professor_id_course_professor'), 'review', 'course_professor', ['course_professor_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('fk_review_course_professor_id_course_professor'), 'review', type_='foreignkey')
    op.drop_table('course_professor')
    op.drop_table('subject')
    op.drop_table('program')
    op.drop_table('professor')
    op.drop_table('faculty')
    # ### end Alembic commands ###
